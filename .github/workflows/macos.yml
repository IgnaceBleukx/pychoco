name: MacOS

on:
  push:
    branches: [ "master" ]
    tags: [ '**' ]

jobs:
  build-macos:
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        config:
          - { os: macos-10.15,  python-version: "3.10" }
          - { os: macos-10.15,  python-version: "3.9" }
          - { os: macos-10.15,  python-version: "3.8" }
          - { os: macos-10.15,  python-version: "3.7" }
          - { os: macos-10.15,  python-version: "3.6" }
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.config.python-version }}
          architecture: x64
      - name: Set up GraalVM Native Image toolchain
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '20'
          distribution: 'graalvm'
      - name: Install Swig
        run: brew install swig
      - name: Update repository
        run: |
          git submodule update --init --recursive
      - name: Build
        run: |
          sh build.sh
          pip install pychoco -f dist/
      - name: Test
        run: |
          pip install pytest
          pip install -r requirements_tests.txt
          pytest
      - name: Generate Report
        run: |
          pip install coverage
          coverage run -m unittest
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
      - name: Upload wheel artifacts
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: actions/upload-artifact@v2
        with:
          name: wheel-${{matrix.config.os}}-${{matrix.config.python-version}}-artifact
          path: dist/
          if-no-files-found: error

  upload-pypi-macos:
    needs: build-macos
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    strategy:
      matrix:
        config: 
          - { os: macos-10.15,  python-version: "3.10" }
          - { os: macos-10.15,  python-version: "3.9" }
          - { os: macos-10.15,  python-version: "3.8" }
          - { os: macos-10.15,  python-version: "3.7" }
          - { os: macos-10.15,  python-version: "3.6" }
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: wheel-${{matrix.config.os}}-${{matrix.config.python-version}}-artifact
        path: dist
    - name: List files
      run: ls -R
    - name: Upload to PyPi
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true
