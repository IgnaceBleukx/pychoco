name: Windows

oon:
  push:
    branches: [ "master" ]
    tags: [ '**' ]

jobs:
  build-windows:
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        config:
          - { os: windows-latest, python-version: "3.10" }
          - { os: windows-latest, python-version: "3.9" }
          - { os: windows-latest, python-version: "3.8" }
          - { os: windows-latest, python-version: "3.7" }
          - { os: windows-latest, python-version: "3.6" }
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.config.python-version }}
          architecture: x64
      - name: Set up GraalVM Native Image toolchain
        uses: helpermethod/graalvm-native-image-toolchain@0.0.2
        with:
          graalvm-version: 22.2.0
          java-version: 11
      - name: Install Swig
        run: choco install swig
      - name: Update repository
        run: |
          git submodule update --init --recursive
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        run: |
          sh build.sh
          pip3 install pychoco -f dist/
      - name: Test
        run: |
          pip3 install -U pytest
          pip3 install -r requirements_tests.txt
          pytest
      - name: Generate Report
        run: |
          pip3 install coverage
          coverage run -m unittest
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
      - name: Upload to PyPi
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true

  upload-pypi-windows:
    needs: build-windows
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    strategy:
      matrix:
        config: 
          - { os: windows-latest, python-version: "3.10" }
          - { os: windows-latest, python-version: "3.9" }
          - { os: windows-latest, python-version: "3.8" }
          - { os: windows-latest, python-version: "3.7" }
          - { os: windows-latest, python-version: "3.6" }
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: wheel-${{matrix.config.os}}-${{matrix.config.python-version}}-artifact
        path: dist
    - name: List files
      run: ls -R
    - name: Upload to PyPi
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true
